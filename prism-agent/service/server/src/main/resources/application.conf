iris {
    service {
        host = "localhost"
        host = ${?IRIS_HOST}
        port = 8081
        port = ${?IRIS_PORT}
    }
}

prismNode {
    service = {
        host = "localhost"
        host = ${?PRISM_NODE_HOST}
        port = 50053
        port = ${?PRISM_NODE_PORT}
    }
}

castor {
    database {
        host = "localhost"
        host = ${?CASTOR_DB_HOST}
        port = 5432
        port = ${?CASTOR_DB_PORT}
        databaseName = "castor"
        databaseName = ${?CASTOR_DB_NAME}
        username = "postgres"
        username = ${?CASTOR_DB_USER}
        password = "postgres"
        password = ${?CASTOR_DB_PASSWORD}
        awaitConnectionThreads = 8
    }
}

pollux {
    database {
        host = "localhost"
        host = ${?POLLUX_DB_HOST}
        port = 5433
        port = ${?POLLUX_DB_PORT}
        databaseName = "pollux"
        databaseName = ${?POLLUX_DB_NAME}
        username = "postgres"
        username = ${?POLLUX_DB_USER}
        password = "postgres"
        password = ${?POLLUX_DB_PASSWORD}
        awaitConnectionThreads = 8
    }
    issueBgJobRecurrenceDelay = 2 seconds
    issueBgJobProcessingParallelism = 25
    presentationBgJobRecurrenceDelay = 2 seconds
    presentationBgJobProcessingParallelism = 25
}

connect {
    database {
        host = "localhost"
        host = ${?CONNECT_DB_HOST}
        port = 5433
        port = ${?CONNECT_DB_PORT}
        databaseName = "connect"
        databaseName = ${?CONNECT_DB_NAME}
        username = "postgres"
        username = ${?CONNECT_DB_USER}
        password = "postgres"
        password = ${?CONNECT_DB_PASSWORD}
        awaitConnectionThreads = 8
    }
    connectBgJobRecurrenceDelay = 2 seconds
    connectBgJobProcessingParallelism = 25
}

agent {
    httpEndpoint {
        http {
            port = 8085
            port =${?AGENT_HTTP_PORT}
        }
    }
    didCommServiceEndpointUrl = ${DIDCOMM_SERVICE_URL}
    database {
        host = "localhost"
        host = ${?AGENT_DB_HOST}
        port = 5433
        port = ${?AGENT_DB_PORT}
        databaseName = "agent"
        databaseName = ${?AGENT_DB_NAME}
        username = "postgres"
        username = ${?AGENT_DB_USER}
        password = "postgres"
        password = ${?AGENT_DB_PASSWORD}
        awaitConnectionThreads = 8
    }
    verification {
        options {
            credential {
               verifySignature = true
               verifyDates = false
               leeway = 0 seconds
               verifySignature = ${?CREDENTIAL_VERIFY_SIGNATURE}
               verifyDates = ${?CREDENTIAL_VERIFY_DATES}
               leeway = ${?CREDENTIAL_LEEWAY}  
            }
            presentation {
               verifySignature = true
               verifyDates = false
               verifyHoldersBinding = false
               leeway = 0 seconds
               verifySignature = ${?PRESENTATION_VERIFY_SIGNATURE}
               verifyDates = ${?PRESENTATION_VERIFY_DATES}
               verifyHoldersBinding = ${?PRESENTATION_VERIFY_HOLDER_BINDING}
               leeway = ${?PRESENTATION_LEEWAY}  
            }
        }
    }
}
