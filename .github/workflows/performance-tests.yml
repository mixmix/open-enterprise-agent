name: Performance tests

concurrency:
  group: ${{ github.head_ref }}${{ github.ref }}-performance-tests
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  BENCHMARKING_DIR: "tests/performance-tests/atala-performance-tests-k6"
  NODE_AUTH_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}

jobs:
  run-e2e-tests:
    name: "Run performance tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v13
        with:
          java-version: openjdk@1.11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.8.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.ATALA_GITHUB_ACTOR }}
          password: ${{ secrets.ATALA_GITHUB_TOKEN }}

      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.12.2
          legacy: true    # will also install in PATH as `docker-compose`

      - name: Build local version of PRISM Agent
        env:
          ENV_FILE: "infrastructure/local/.env"
          GITHUB_ACTOR: ${{ secrets.ATALA_GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
        run: |
          sbt docker:publishLocal
          PRISM_AGENT_VERSION=$(cut version.sbt -d '=' -f2 | tr -d '" ')
          sed -i.bak "s/PRISM_AGENT_VERSION=.*/PRISM_AGENT_VERSION=${PRISM_AGENT_VERSION}/" "${ENV_FILE}" && rm -f "${ENV_FILE}.bak"
          cat "${ENV_FILE}"

      - name: Start services for issuer
        env:
          PORT: 8080
          DEFAULT_WALLET_ENABLED: "true"
          DEFAULT_WALLET_AUTH_API_KEY: default
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./infrastructure/shared/docker-compose.yml"
          compose-flags: "--env-file ./infrastructure/local/.env -p issuer"
          up-flags: "--wait"
          down-flags: "--volumes"

      - name: Start services for holder
        env:
          PORT: 8090
          DEFAULT_WALLET_ENABLED: "true"
          DEFAULT_WALLET_AUTH_API_KEY: default
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./infrastructure/shared/docker-compose.yml"
          compose-flags: "--env-file ./infrastructure/local/.env -p holder"
          up-flags: "--wait"
          down-flags: "--volumes"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: "https://npm.pkg.github.com"
          scope: 'input-output-hk'

      - name: Install dependencies
        uses: borales/actions-yarn@v4.2.0
        with:
          cmd: install
          dir: ${{ env.BENCHMARKING_DIR }}

      - name: Compile tests to JS
        uses: borales/actions-yarn@v4.2.0
        with:
          cmd: webpack
          dir: ${{ env.BENCHMARKING_DIR }}

      - name: All Smoke Tests
        env:
          ISSUER_AGENT_API_KEY: default
          HOLDER_AGENT_API_KEY: default
        run: |
          # Have to use manual download because GitHub action doesnt support localhost execution
          curl https://github.com/grafana/k6/releases/download/v0.45.0/k6-v0.45.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1
          ls -la
          ./k6 run -e SCENARIO_LABEL=create-prism-did-smoke ${{ env.BENCHMARKING_DIR }}/dist/create-prism-did-test.js
          ./k6 run -e SCENARIO_LABEL=credential-offer-smoke ${{ env.BENCHMARKING_DIR }}/dist/credential-offer-test.js
          ./k6 run -e SCENARIO_LABEL=credential-schema-smoke ${{ env.BENCHMARKING_DIR }}/dist/credential-schema-test.js
          ./k6 run -e SCENARIO_LABEL=did-publishing-smoke ${{ env.BENCHMARKING_DIR }}/dist/did-publishing-test.js
          ./k6 run -e SCENARIO_LABEL=connection-flow-smoke ${{ env.BENCHMARKING_DIR }}/dist/connection-flow-test.js
          ./k6 run -e SCENARIO_LABEL=issuance-flow-smoke ${{ env.BENCHMARKING_DIR }}/dist/issuance-flow-test.js
          ./k6 run -e SCENARIO_LABEL=present-proof-flow-smoke ${{ env.BENCHMARKING_DIR }}/dist/present-proof-flow-test.js
